#chat-screen {
  background-color: #abc1d1;
  height: 500vh;
}

/* chat페이지의 alt-header와 status-bar는 
스크롤을 내려도 항상 위에 고정되기를 바라면서
position: fixed;
 */
#chat-screen .alt-header,
#chat-screen .status-bar {
  top: 0;
  position: fixed;
  /* 해당 body에 배경색을 지정했는데 여기에도 배경색을 지정하는 이유
  status-bar나 header의 뒤에 오는 것들이 보이지 않도록
  덮어버리기 위해
  => 추가: status-bar나 alt-header는 main-chat와 다른 레이어를 가지기 때문에
  별도로 배경색과 너비를 지정해주었다
  */
  width: 100%;
  background-color: #abc1d1;
  box-sizing: border-box;
}

/*  === z-index ===
status-bar가 보이지 않는 문제를 해결하기 위해
alt-header 및 status-bar의 z-index 적용
z-index는 레이어같은걸로, 
position: absolute 같은 절대적인 위치나
position: fixed 같은 고정된 위치에 대해 설정할 수 있다
 */
#chat-screen .status-bar {
  z-index: 2;
}

#chat-screen .alt-header {
  top: 10px;
  z-index: 1;
}

@keyframes fadeIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

/* === position: fixed & margin-top: 180px ===
상단의 UI가 position: fixed으로 고정된 위치를 가졌을 때
다음에 오는 요소에는 margin-top을 주는 것이 좋다
=> position: fixed으로 고정된 위치를 주게 되면
별도의 layer를 가지게 되기 때문에
main chat 페이지와 다른 레이어를 가진다
status-bar 및 alt-header 영역 아래부터
작성될 수 있도록 margin-top 적용 */

.main-chat {
  margin-top: 180px;
  /* 위에서 아래로 쌓임 */
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.8s linear;
}

.chat__timestamp {
  color: white;
  background-color: #92a4b2;
  padding: 15px;
  font-size: 14px;
  border-radius: 25px;
  margin-bottom: 25px;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
}

.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-right: 10px;
}

.message__author {
  margin-bottom: 5px;
  display: block;
}

.message__info {
  display: flex;
  /*  message__time이 아래로 오도록 */
  align-items: flex-end;
}

.message__bubble {
  background-color: white;
  padding: 13px;
  font-size: 18px;
  border-radius: 15px;
  /* 왼쪽 상단의 border-radius를 0으로 지정
  해당 강의에서는 말풍선 모양을 만들지는 않았다 */
  border-top-left-radius: 0px;
  margin-right: 5px;
}

.message__time,
.message__author {
  opacity: 0.8;
  font-size: 14px;
}

/* 내가 보낸 메시지의 스타일링: 우측 끝으로 이동 */
.message-row--own {
  justify-content: flex-end;
}

.message-row--own .message__bubble {
  background-color: var(--yellow);
  /* 말풍선 위치 변경 */
  border-top-right-radius: 0px;
  border-top-left-radius: 15px;
  /* 기존 bubble의 margin은 오른쪽에 적용되었지만 
  reverse되었기 때문에 margin을 왼쪽에 적용 */
  margin-right: 0px;
  margin-left: 5px;
}

/* === flex children 순서 변경
1. order 속성은 flex children에게만 적용된다
.message-row--own .message__bubble {
  order: 1;
}
.message-row--own .message__time {
  order: 0;
} 
2. modifier 활용
flex container의 flex-direction에 reverse 속성추가
.message-row--own .message__info {
  flex-direction: row-reverse;
} */
.message-row--own .message__info {
  flex-direction: row-reverse;
}

.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 5px 25px;
  box-sizing: border-box;
  transition: transform 0.3s ease-in-out;
}

/* reply__column은 너비를 가지지 않기 때문에 직접 지정 */
.reply .reply__column:first-child {
  width: 10%;
}
.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}

.reply i {
  opacity: 0.5;
}

.reply input {
  padding: 14px;
  width: 100%;
  border: var(--main-border);
  border-radius: 25px;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
}

.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: 3px;
  top: 3px;
}

.reply__column:last-child > i {
  right: 50px;
  top: 15px;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.reply__column button i {
  opacity: 1;
}

/* reply__column button 버튼이 활성화되었을 때
별다른 스타일링 안줌 */
.reply__column button:focus,
.reply__column button:active {
  outline: none;
}

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
  opacity: 0;
}

.reply input:focus {
  width: 98vw;
  transform: translateX(-13%) translateY(-80px);
}

.reply:focus-within {
  transform: translateY(80px);
}
